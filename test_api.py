import json
import requests
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email import encoders
import time
from datetime import datetime
import pytz
import os
import urllib3


# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞
def load_auth_token():
    with open('auth_token.txt', 'r') as file:
        return file.read().strip()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
def execute_request(request_name, url, auth_token, duration_time=None):
    headers = {'Authorization': f'Bearer {auth_token}'}
    print("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å:", request_name)
    print("URL –∑–∞–ø—Ä–æ—Å–∞:", url)

    try:
        response = requests.get(url, headers=headers)
        print("–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.")

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞
        status = response.status_code

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
        duration = response.elapsed.total_seconds()

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
        marker = "üîµ" if status == 200 and (duration_time is None or duration <= duration_time) else "üî¥"

        # –ó–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞ –≤ —Ñ–∞–π–ª
        with open('test_results.txt', 'a', encoding='utf-8') as file:
            file.write(f"{marker} {request_name}\n")
            file.write(f"URL –∑–∞–ø—Ä–æ—Å–∞: {url}\n")
            file.write(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {status}\n")
            if status == 500:
                file.write("üî¥internal server error")
                file.write("\n")
            else:
                # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
                duration = response.elapsed.total_seconds()
                file.write(f"–°–∫–æ—Ä–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: {duration} —Å–µ–∫\n")
                if marker == "üî¥":
                    file.write(f"üî¥–ë–∏–∑–Ω–µ—Å-–ª–∏–º–∏—Ç: {str(duration_time)} —Å–µ–∫.\n")
            file.write("\n")

        print("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ñ–∞–π–ª.")
    except requests.exceptions.RequestException as e:
        # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –º–∞—Ä–∫–µ—Ä, —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ —Ñ–∞–π–ª
        marker = "üî¥"
        error_message = str(e)

        with open('test_results.txt', 'a', encoding='utf-8') as file:
            file.write(f"{marker} {request_name}\n")
            file.write(f"URL –∑–∞–ø—Ä–æ—Å–∞: {url}\n")
            file.write(f"–û—à–∏–±–∫–∞: {error_message}\n\n")
            file.write("\n")
        print("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ñ–∞–π–ª.")


# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
def load_requests():
    requests_list = []
    folder_path = 'requests'

    for filename in os.listdir(folder_path):
        if filename.endswith('.json'):
            file_path = os.path.join(folder_path, filename)

            with open(file_path, 'r', encoding='utf-8') as file:
                data = json.load(file)
                requests_list.append(data[0])

    print("–ó–∞–ø—Ä–æ—Å—ã –∏–∑ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—É—á–µ–Ω—ã.")
    return requests_list


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤
def run_tests():
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ "requests"
    requests_list = load_requests()

    print("–ó–∞–ø—Ä–æ—Å—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã.")

    # –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    auth_token = load_auth_token()

    print("–¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω.")

    # –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–∞ test_results –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    with open('test_results.txt', 'w', encoding='utf-8') as file:
        file.write('')

    print("–§–∞–π–ª –æ—á–∏—â–µ–Ω.")

    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    for request in requests_list:
        request_name = request['name']
        url = request['url']
        if 'durationTime' in request:
            duration_time = request['durationTime']
            execute_request(request_name, url, auth_token, duration_time)
        else:
            execute_request(request_name, url, auth_token)

    print("–¢–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.")


# –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤
run_tests()

# –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
def send_email():
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ –ø–æ—á—Ç–æ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ
    email = 'smtp_user@stm-labs.ru'
    password = 'COgNF6FR'

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ MIMEMultipart
    msg = MIMEMultipart()

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ –ú–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
    moscow_tz = pytz.timezone('Europe/Moscow')
    now = datetime.now(moscow_tz)
    date_time = now.strftime("%d/%m/%Y %H:%M:%S")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—à–∏–±–æ–∫
    with open('test_results.txt', 'r', encoding='utf-8') as file:
        lines = file.readlines()
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º, –æ—Ç–ª–∏—á–Ω—ã–º –æ—Ç 200
        has_errors = any("üî¥" in line for line in lines)

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤-–º–∞—Ä–∫–µ—Ä–æ–≤ —Ü–≤–µ—Ç–∞ –≤ —Ç–µ–º–µ –ø–∏—Å—å–º–∞
    subject_color = "üî¥" if has_errors else "üîµ"
    subject = f"{subject_color} –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ API –ú–ê–†–ú-4: {date_time} (–ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è)"

    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π –ø–∏—Å—å–º–∞
    msg['From'] = email
    if has_errors:
        msg['To'] = 'kotyukovvv@rambler.ru'
    else:
        msg['To'] = 'kotyukovvv@rambler.ru'
    msg['Subject'] = subject

    # –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ç–µ—Å—Ç–æ–≤
    with open('test_results.txt', 'r', encoding='utf-8') as file:
        content = file.read()

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–∏—Å—å–º–∞
        msg.attach(MIMEText(content, 'plain'))

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ MIMEBase –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞-–≤–ª–æ–∂–µ–Ω–∏—è
    with open('test_results.txt', 'rb') as attachment:
        part = MIMEBase('application', 'octet-stream')
        part.set_payload(attachment.read())
        encoders.encode_base64(part)
        part.add_header('Content-Disposition', "attachment", filename="test_results.txt")

        # –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞-–≤–ª–æ–∂–µ–Ω–∏—è –∫ –ø–∏—Å—å–º—É
        msg.attach(part)

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø–æ—á—Ç–æ–≤—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º
    with smtplib.SMTP('smtp.lancloud.ru', 587) as server:
        server.starttls()
        server.login(email, password)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
        server.send_message(msg)

        print("–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞.")

        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø–æ—á—Ç–æ–≤—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º
        server.quit()

    print("–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø–æ—á—Ç–æ–≤—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º.")


# –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ç–µ—Å—Ç–æ–≤
send_email()
print("–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ç–µ—Å—Ç–æ–≤.")
